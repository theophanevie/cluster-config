argo-cd:
  global:
    domain: argocd.petit-nuage.org

  configs:
    params:
      server.insecure: true

  certificate:
    enabled: true

  server:
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
        nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      tls: true

argocd-image-updater:
  config:
    argocd:
      grpcWeb: false
      serverAddress: "http://clust-config-argocd-server"
      insecure: true
      plaintext: true
    registries:
      - name: GitHub Container Registry
        prefix: ghcr.io
        api_url: https://ghcr.io
        credentials: pullsecret:default/clust-config-apps-registry

grafana:
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    hosts:
      - grafana.petit-nuage.org
    tls:
      - secretName: grafana-tls
        hosts:
          - grafana.petit-nuage.org

  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

  persistence:
    enabled: true

  sidecar:
    notifiers:
      enabled: false

  admin:
    # Secrets must be generate after kubeseal first installation
    existingSecret: grafana-admin-creds

  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Prometheus
        type: prometheus
        url: http://clust-config-kube-promethe-prometheus:9090
        access: proxy
        isDefault: true

      - name: Loki
        type: loki
        url: http://loki-gateway.default.svc.cluster.local:80
        access: proxy
        jsonData:
          timeout: 30
          maxLines: 500

kube-prometheus-stack:
  alertmanager:
    enabled: false
  kubeProxy:
    enabled: false
  grafana:
    enabled: false

  prometheus:
    # TODO: add resources

    prometheusSpec:
      scrapeInterval: "30s"
      scrapeTimeout: "30s"
      evaluationInterval: "30s"

      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: csi-cinder-classic
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 50Gi

sealed-secrets:
  resources:
    limits:
      cpu: 50m
      memory: 128Mi
    requests:
      cpu: 50m
      memory: 128Mi


loki:
  loki:
    auth_enabled: false

  minio:
    enable: true

  write:
    replicas: 2

  read:
    replicas: 2

  backend:
    replicas: 2

  limits_config:
    retention_period: 1h
    per_tenant_override_config: /etc/overrides.yaml


ingress-nginx:
  controller:
    service:
      annotations:
        loadbalancer.ovhcloud.com/class: octavia


